<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" href="/img/aksharalogo.png">

  <link rel="stylesheet" href="/assets/css/material-dashboard.css">
  <link rel="stylesheet" href="/assets/css/material-dashboard.css.map">
  <link rel="stylesheet" href="/assets/css/material-dashboard.min.css">
  <title>
    Dashboard
  </title>
  <link rel="stylesheet" type="text/css"
    href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
  <link href="/assets/css/nucleo-icons.css" rel="stylesheet" />
  <link href="/assets/css/nucleo-svg.css" rel="stylesheet" />
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
  <link id="pagestyle" href="/assets/css/material-dashboard.css?v=3.1.0" rel="stylesheet" />
  <script defer data-site="YOUR_DOMAIN_HERE" src="https://api.nepcha.com/js/nepcha-analytics.js"></script>
</head>

<body class="g-sidenav-show  bg-gray-200">
  <!--header-->
  <%- include('../partials/adminpartials/aside') %>
    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
      <!-- Navbar -->
      <%- include('../partials/adminpartials/navbar') %>
        <!-- End Navbar -->

        <div class="container-fluid py-4">
          <div class="row">
            <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
              <div class="card">
                <div class="card-header p-3 pt-2">
                  <div
                    class="icon icon-lg icon-shape bg-gradient-dark shadow-dark text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">payments</i>
                  </div>
                  <% let paymentCount={}; %>

                    <% for (let i=0; i < data.length; i++) { %>
                      <% const paymentMethod=data[i].payment; %>
                        <% paymentCount[paymentMethod]=(paymentCount[paymentMethod] || 0) + 1; %>
                          <% } %>

                            <% let mostCommonPaymentMethod=null; %>
                              <% let maxCount=0; %>

                                <% for (const method in paymentCount) { %>
                                  <% if (paymentCount[method]> maxCount) { %>
                                    <% maxCount=paymentCount[method]; %>
                                      <% mostCommonPaymentMethod=method; %>
                                        <% } %>
                                          <% } %>

                                            <div class="text-end pt-1">
                                              <p class="text-sm mb-0 text-capitalize">Most Common Payment </p>
                                              <h4 class="mb-0">
                                                <%= mostCommonPaymentMethod %>
                                              </h4>
                                            </div>

                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                  <p class="mb-0"><span style="margin-right: 15px;"
                      class="text-success text-sm font-weight-bolder">Online
                    </span>Target Online</p>
                </div>
              </div>
            </div>
            <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
              <div class="card">
                <div class="card-header p-3 pt-2">
                  <div
                    class="icon icon-lg icon-shape bg-gradient-primary shadow-primary text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10 "> production_quantity_limits</i>
                  </div>




                  <% let totalQuantity=0; %>

                    <% for (let i=0; i < data.length; i++) { %>
                      <% for (let j=0; j < data[i].productdetails.length; j++) { %>
                        <% totalQuantity +=data[i].productdetails[j].quantity; %>
                          <% } %>
                            <% } %>

                              <div class="text-end pt-1">
                                <p class="text-sm mb-0 text-capitalize">Total Quantity Sale</p>
                                <h4 class="mb-0">
                                  <%= totalQuantity %>
                                </h4>
                              </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                  <p class="mb-0"><span style="margin-right: 15px;"
                      class="text-danger text-sm font-weight-bolder">500</span>Target of this Month</p>
                </div>
              </div>
            </div>
            <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
              <div class="card">
                <div class="card-header p-3 pt-2">
                  <div
                    class="icon icon-lg icon-shape bg-gradient-success shadow-success text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10"> real_estate_agent</i>

                  </div>
                  <% let totalOrders=0; %>

                    <% for (let i=0; i < data.length; i++) { %>
                      <% totalOrders +=data[i].total; %>
                        <% } %>

                          <div class="text-end pt-1">
                            <p class="text-sm mb-0 text-capitalize">
                              Total profit
                            </p>
                            <h4 class="mb-0">
                              <%= totalOrders %>
                            </h4>
                          </div>

                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                  <p class="mb-0"><span style="margin-right: 15px;" class="text-danger text-sm font-weight-bolder">1
                      Lakh</span>Target of this Month</p>
                </div>
              </div>
            </div>
            <div onclick="salesreport()" class="col-xl-3 col-sm-6">
              <div class="card">
                <div class="card-header p-3 pt-2">
                  <div onclick="salesreport()"
                    class="icon icon-lg icon-shape bg-gradient-info shadow-info text-center border-radius-xl mt-n4 position-absolute">
                    <i class="material-icons opacity-10">picture_as_pdf</i>
                  </div>
                  <div class="text-end pt-1">
                    <p class="text-sm mb-0 text-capitalize">Report</p>
                    <h4 onclick="salesreport()" class="mb-0">Download</h4>
                  </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                  <p class="mb-0"><span style="margin-right: 15px;" class="text-success text-sm font-weight-bolder">Pet
                      Station </span>Sales Report
                  </p>
                </div>
              </div>
            </div>
          </div>

          <br>
          <div class="form-check">
            <label style="color: black; font-weight: bold;">Select Chart Type:</label>
            <input class="form-check-input chartType" type="radio" name="chartType" id="yearlyChart" value="yearly"
              checked>
            <label class="form-check-label" for="yearlyChart">Yearly Chart</label>
            <input class="form-check-input chartType" type="radio" name="chartType" id="monthlyChart" value="monthly">
            <label class="form-check-label" for="monthlyChart">Monthly Chart</label>
          </div>
          <!-- chart -->

          <div class="container">
            <div class="row">
             
              <div class="col-md-9">
                <div>
                  <canvas id="myMonthly"></canvas>
                </div>
                <br>
              </div>
            </div>
          </div>



          <%- include('../partials/adminpartials/footer') %>
        </div>




        v
    </main>


</body>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.min.js"
  integrity="sha512-7U4rRB8aGAHGVad3u2jiC7GA5/1YhQcQjxKeaVms/bT66i3LVBMRcBI9KwABNWnxOSwulkuSXxZLGuyfvo7V1A=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<!-- Monthly Chart Script -->
<script>
  document.querySelectorAll('.chartType').forEach(function (radio) {
    radio.addEventListener('change', function () {
      let selectedValue = document.querySelector('input[name="chartType"]:checked').value;
      updateCharts(selectedValue);
    });
  });
  let label
  let data
  let myChart
  let type
  function updateCharts(selectedValue) {
    if(myChart){
      myChart.destroy();
    }
    const totalOrders = '<%=monthlyData%>'.split(',');

    const monthlyOrdersData = '<%= dailyOrdersData %>'.split(',');
  if (selectedValue == "monthly") {
label= ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']
data=monthlyOrdersData.map(Number)
type= 'line'

} else if (selectedValue == "yearly") {
  label= [2023, 2024, 2025]
  data=totalOrders
  type='bar'
  
}
  const Data = {
      type: type,
      data: {
        labels:  label,
        datasets: [{
          label: 'Total Orders',
          data: data,
          fill: false,
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    };
    
    const myMonthlyCtx = document.getElementById('myMonthly').getContext('2d');
    myChart= new Chart(myMonthlyCtx, Data);
  }
  window.onload=updateCharts('yearly')

</script>


<script>
  function salesreport() {
    Swal.fire({
      title: 'Select Date Range',
      html:
        '<input id="start-date" type="date" placeholder="Start Date" class="swal2-input">' +
        '<input id="end-date" type="date" placeholder="End Date" class="swal2-input">',
      showCancelButton: true,
      confirmButtonText: 'Download',
      cancelButtonText: 'Cancel',
      preConfirm: () => {
        const startDate = document.getElementById('start-date').value;
        const endDate = document.getElementById('end-date').value;

        // Validate the input (optional)
        if (!startDate || !endDate) {
          Swal.showValidationMessage('Please select both start and end dates');
        }

        return { startDate, endDate };
      }
    }).then((result) => {
      if (result.isConfirmed) {
        selectmode(result.value);
      }
    });
  }




  function selectmode({ startDate, endDate }) {

    Swal.fire({
      title: 'Download Sales Report',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'PDF',
      cancelButtonText: 'Excel',
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        downloadSalesReport('pdf', startDate, endDate);
      } else if (result.dismiss === Swal.DismissReason.cancel) {
        downloadSalesReport('excel', startDate, endDate);
      }
    })
  }

  function downloadSalesReport(format, startDate, endDate) {

    // Adjust the fetch URL to include the desired format
    const fetchUrl = `/admin/salesReport/${format}`;

    fetch(fetchUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ startDate, endDate }),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.blob(); // Use blob() to get the response as a Blob
      })
      .then(blob => {
        // Create a blob URL and open it in a new tab
        const url = URL.createObjectURL(blob);
        window.open(url, '_blank');
      })
      .catch(error => {
        console.error('Fetch error of sales report:', error);
        // Handle errors if necessary
        Swal.fire('NO ORDERS!', 'There is no orders in that date', 'error');
      });
  }
</script>


</html>